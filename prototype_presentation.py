import streamlit as st

def show_prototype_presentation():
    st.title("üéØ –ü–∞—Ç—Ç–µ—Ä–Ω Prototype (–ü—Ä–æ—Ç–æ—Ç–∏–ø)")
    
    # –°–ª–∞–π–¥ 1
    st.header("1. –ß—Ç–æ —ç—Ç–æ?")
    st.markdown("""
    **Prototype** ‚Äî —ç—Ç–æ –ø–æ—Ä–æ–∂–¥–∞—é—â–∏–π –ø–∞—Ç—Ç–µ—Ä–Ω, –∫–æ—Ç–æ—Ä—ã–π:
    - –ü–æ–∑–≤–æ–ª—è–µ—Ç –∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç—ã **–±–µ–∑ –ø—Ä–∏–≤—è–∑–∫–∏ –∫ –∏—Ö –∫–ª–∞—Å—Å–∞–º**
    - –£–ø—Ä–æ—â–∞–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
    - –†–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ `clone()`
    """)
    st.image("https://refactoring.guru/images/patterns/diagrams/prototype/structure.png", width=500)
    
    # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    st.markdown("---")
    
    # –°–ª–∞–π–¥ 2
    st.header("2. –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞")
    st.code("""
    import copy

    class Prototype:
        def clone(self):
            return copy.deepcopy(self)

    class Car(Prototype):
        def __init__(self, model, color):
            self.model = model
            self.color = color
    """, language='python')
    
    # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
    st.markdown("---")
    
    # –°–ª–∞–π–¥ 3
    st.header("3. –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å?")
    st.code("""
    # –°–æ–∑–¥–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
    tesla = Car("Model S", "red")
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º –∏ –º–µ–Ω—è–µ–º
    cloned_tesla = tesla.clone()
    cloned_tesla.color = "blue"
    
    print(tesla.color)        # red
    print(cloned_tesla.color) # blue
    """)
    st.success("‚úÖ –ö–ª–æ–Ω –Ω–µ–∑–∞–≤–∏—Å–∏–º –æ—Ç –æ—Ä–∏–≥–∏–Ω–∞–ª–∞!")

if __name__ == "__main__":
    show_prototype_presentation()
